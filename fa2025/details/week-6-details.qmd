---
date: last-modified
title: Week 6 - Details
---

```{python}
#| label: Loading canvas data
from cnvsapi.config import config
from cnvsapi.markup_utils import  expand_assignment, expand_page, expand_quiz, expand_file

# Uncomment as necessary.  These take time to load so only use what you need.

#pages = config.get_pages()
#quizzes = config.get_quizzes()
#assignments = config.get_assignment_groups(include=['assignments']) # from Canvas
#files = config.get_files()

# Here is an example of how these are expanded.
# expand_xxx( xxx, "title","resource name", url_type, **kwargs )
# url_type="anchor" ->  <a href="resource name" **kwargs>title</a>
# url_type="img" -> <img src="resource_name" title="title" **kwargs )
#
# expand_quiz(quizzes, "Take the Pre-class survey","pre-class survey", url_type="anchor", target="_blank")
# expand_page(pages, "Join the course discord","resource-course-discord", url_type="anchor", target="_blank")
# expand_assignment(assignments,"Course Syllabus","syllabus",url_type="anchor")
# expand_file("Picture of me","headshot-20210731.png",url_type="img", width="200px")

```

#### Week 6 - Changes to the schedule!

* Monday lecture is deferred.  Rather, I ask that you attend and participate in the [Computer Science Club Night](https://virginiacommonwealth.instructure.com/courses/122236/discussion_topics/1085317).  I sent out an announcement to the class via email.  Check it out!


<!-- overview-block-begin -->

<p class="lead">Redundant content is a challenge in databases.  Normalization describes the way we minimize duplicate and redundent content.</p>
    
<!-- overview-block-end -->


<!-- deliverables-block-begin -->
#### Things to do this week


[Discussion 3 - Normal forms](https://virginiacommonwealth.instructure.com/courses/122236/assignments/1241112) is a challenging discussion because you need to know about normalization to get started. I HIGHLY recommend that you watch the *Normal Forms* video in the resources.


[Homework 4 - Analysis and Normal Forms](https://virginiacommonwealth.instructure.com/courses/122236/assignments/1241136) focuses on normal forms and analysis. Successful completion of homework 4 will REALLY help you with Quiz 3!


[Practice Quiz 3 - Analysis and Normal Forms](https://virginiacommonwealth.instructure.com/courses/122236/assignments/1241148) is the practice quiz for Normal Forms. Work this practice quiz in conjunction with homework 4.

<!-- deliverables-block-end -->

<!-- resources-block-begin -->
#### Notes on the Resources

Review ALL the resources above. Here are some additional notes:
    
[Normal Forms](https://virginiacommonwealth.instructure.com/courses/122236/pages/resource-week-6-normal-forms) is probably the *MOST IMPORTANT* video you can watch this week. It very cleanly describes normal forms and why they're important.  Watch this *before* you tackle the discussion assignment.


[BCNF](https://virginiacommonwealth.instructure.com/courses/122236/pages/resource-week-6-bcnf) is another video from Decomplexify (the author of the normal forms video).  This video describes *Boyce-Codd Normal Form* or *BCNF*.


[Keys and more keys](https://virginiacommonwealth.instructure.com/courses/122236/pages/resource-week-6-keys-and-more-keys) provides an overview of *all* the different kinds of database keys.


[Denormalization](https://virginiacommonwealth.instructure.com/courses/122236/pages/resource-week-6-denormalization) is a change of pace.  While we've been spending all of our time *normalizing* databases, sometime we need to *denormalize* them!  Check it out!

<!-- resources-block-end -->



```{python}
# example of grid using the designplus kl_large_link_grid class.
#print(f"""
#<ul class="kl_large_link_grid">
#<li>{expand_page(pages,"Course Instructor","course-instructor",url_type="anchor")}</li>
#<li>{expand_assignment(assignments,"Course Syllabus","syllabus",url_type="anchor")}</li>
#<li>{expand_page(pages,"Course Textbooks","resource-textbooks",url_type="anchor")}</li>
#<li>{expand_page(pages,"Student Resources","resource-student-resources",url_type="anchor")}</li>
#<li>{expand_page(pages,"Canvas Resources","resource-canvas-resources",url_type="anchor")}</li>
#<li>{expand_page(pages,"SAVE YOU HOURS&trade;","resource-save-you-hours",url_type="anchor")}</li>
#</ul>
#""")
```

```{python}
## This is an example of how one includes an image within the page.
## Note that other html attributes (e.g., width=, height=, etc.) can be added
## This will return a canvas-ready <img /> tag .
#print(f"""
#{expand_file("Picture of me","headshot-20210731.png",url_type="img", width="200px")}
#""")
```