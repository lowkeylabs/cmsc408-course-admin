<!-- # Homework 6 - Walkthrough SP2025 -->

## Homework 6 - Reminder - Build your database incrementally!

:::: {.columns}
::: {.column}
### DDL Starter commands

* commands to create the database
* DROP TABLE, CREATE TABLE, INSERT INTO

### Data constraints

* attributes to ensure that only good data gets into the database
* Data types: INT, DATE, VARCHAR(255), VARCHAR(4096)
* Data attributes:  NOT NULL, DEFAULT 

:::
::: {.column}

### Tips and tricks

* Start simple - not too much at once!

* Don't forget your COMMIT statements!

* You *don't need* primary keys, foreign keys or unique field constraints.

* Primary, foreign keys, and UNIQUE are *integrity constraints*.

* They are all OPTIONAL and can added later.

* You can do "joins" without primary and foreign key, just use caution.

* Tables and records connect on values in the table.

* Primary keys, foreign keys and UNIQUE are your friends, don't ignore them.  With them, you can trust your database.

:::
::::

## Homework 6 - Reminder - Build your database incrementally!

:::: {.columns}
::: {.column}
### Tools: VS Code

* use SQL extensions in VSCode to build your DDL one block at a time.
* when you've got a bunch of blocks, run the whole DDL file.
* Build without integrity constraints, then add them later.

### Use Quarto to test the DDL and queries

* Use Quarto "Run Cell" to test individual queries in your QMD
* Regularly save and run the entire QMD from command line to ensure that all
orchestrates together.

:::
::: {.column}

### Tips and tricks

* Start simple - not too much at once!

* Don't forget your COMMIT statements!

* You *don't need* primary keys, foreign keys or unique field constraints.

* Primary, foreign keys, and UNIQUE are *integrity constraints*.

* They are all OPTIONAL and can added later.

* You can do "joins" without primary and foreign key, just use caution.

* Tables and records connect on values in the table.

* Primary keys, foreign keys and UNIQUE are your friends, don't ignore them.  With them, you can trust your database.

:::
::::
